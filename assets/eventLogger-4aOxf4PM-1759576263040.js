const i={AGENT_BIRTH:"agent_birth",AGENT_DEATH:"agent_death",RESOURCE_PRODUCTION:"resource_production",STARVATION_WARNING:"starvation_warning",ECONOMIC_BOOM:"economic_boom",ECONOMIC_CRISIS:"economic_crisis",CONNECTION_FORMED:"connection_formed",CONNECTION_BROKEN:"connection_broken",POLARIZATION_EVENT:"polarization_event",CLAN_FORMED:"clan_formed",CLAN_DECISION_MADE:"clan_decision_made",CONFLICT_INITIATED:"conflict_initiated",RESOURCE_THEFT:"resource_theft",CYCLE_COMPLETED:"cycle_completed",MILESTONE_REACHED:"milestone_reached"},o={INFO:"info",CRITICAL:"critical",MILESTONE:"milestone"};class E{constructor(){this.events=[],this.eventCounts={},this.cycleEvents=new Map,this.agentEvents=new Map,this.clanEvents=new Map,this.statistics={totalEvents:0,eventsByType:{},eventsBySeverity:{},eventsPerCycle:[],criticalEvents:[]}}logEvent(n,e={},t=o.INFO){const s={id:this.events.length,type:n,severity:t,timestamp:Date.now(),cycle:e.cycle||0,data:{...e},description:this._generateDescription(n,e)};return this.events.push(s),this._updateStatistics(s),this._categorizeEvent(s),t===o.CRITICAL&&console.warn(`🚨 Critical Event: ${s.description}`),s}_generateDescription(n,e){const t=(s,c=2)=>s!=null?Number(s).toFixed(c):"0";switch(n){case i.AGENT_BIRTH:return`Агент ${e.agentId} родился в кластере ${e.cluster}`;case i.AGENT_DEATH:return`Агент ${e.agentId} умер от ${e.cause||"неизвестной причины"} (ресурсы: ${t(e.resources)})`;case i.RESOURCE_PRODUCTION:return`Агент ${e.agentId||"N/A"} произвел ${t(e.amount)} ресурсов (множитель: ${t(e.multiplier,2)||1})`;case i.STARVATION_WARNING:return`Агент ${e.agentId} голодает ${e.starvationDays||0} дней (ресурсы: ${t(e.resources)})`;case i.ECONOMIC_BOOM:return`Экономический бум! Средние ресурсы: ${t(e.averageResources)} (+${t(e.growthRate,1)}%)`;case i.ECONOMIC_CRISIS:return`Экономический кризис! ${t(e.deathRate,1)}% агентов умерло за цикл`;case i.CLAN_FORMED:return`Клан ${e.clanId} сформирован (${e.memberCount||0} членов, плотность: ${t(e.density)})`;case i.CLAN_DECISION_MADE:return`Клан ${e.clanId} выбрал ${e.decision} (голосов: ${e.votes||0})`;case i.CONFLICT_INITIATED:return`Клан ${e.attackerId} атакует клан ${e.victimId} (сила: ${t(e.attackerStrength,1)} vs ${t(e.victimStrength,1)})`;case i.RESOURCE_THEFT:return`Украдено ${t(e.amount)} ресурсов у клана ${e.victimId}`;case i.CONNECTION_FORMED:return`Связь образована между агентами ${e.agent1} и ${e.agent2} (сила: ${t(e.strength)})`;case i.POLARIZATION_EVENT:return`Поляризация: ${e.connectionCount||0} связей ослаблены на ${t(e.averageWeakening,1)}%`;case i.MILESTONE_REACHED:return`Достигнута веха: ${e.milestone} (цикл ${e.cycle})`;default:return`Событие ${n}: ${JSON.stringify(e)}`}}_updateStatistics(n){this.statistics.totalEvents++,this.statistics.eventsByType[n.type]||(this.statistics.eventsByType[n.type]=0),this.statistics.eventsByType[n.type]++,this.statistics.eventsBySeverity[n.severity]||(this.statistics.eventsBySeverity[n.severity]=0),this.statistics.eventsBySeverity[n.severity]++,n.severity===o.CRITICAL&&this.statistics.criticalEvents.push(n);const e=n.cycle;this.statistics.eventsPerCycle[e]||(this.statistics.eventsPerCycle[e]=0),this.statistics.eventsPerCycle[e]++}_categorizeEvent(n){const e=n.cycle;if(this.cycleEvents.has(e)||this.cycleEvents.set(e,[]),this.cycleEvents.get(e).push(n),n.data.agentId!==void 0){const t=n.data.agentId;this.agentEvents.has(t)||this.agentEvents.set(t,[]),this.agentEvents.get(t).push(n)}if(n.data.clanId!==void 0){const t=n.data.clanId;this.clanEvents.has(t)||this.clanEvents.set(t,[]),this.clanEvents.get(t).push(n)}}getEvents(n={}){let e=[...this.events];return n.type&&(e=e.filter(t=>t.type===n.type)),n.severity&&(e=e.filter(t=>t.severity===n.severity)),n.cycle!==void 0&&(e=e.filter(t=>t.cycle===n.cycle)),n.agentId!==void 0&&(e=e.filter(t=>t.data.agentId===n.agentId)),n.clanId!==void 0&&(e=e.filter(t=>t.data.clanId===n.clanId)),n.limit&&(e=e.slice(-n.limit)),e}getEventsByCycle(n){return this.cycleEvents.get(n)||[]}getEventsByAgent(n){return this.agentEvents.get(n)||[]}getEventsByClan(n){return this.clanEvents.get(n)||[]}analyzeTrends(){return{economicHealth:this._analyzeEconomicTrends(),socialStability:this._analyzeSocialTrends(),conflictIntensity:this._analyzeConflictTrends(),populationDynamics:this._analyzePopulationTrends()}}_analyzeEconomicTrends(){const e=this.events.filter(c=>[i.RESOURCE_PRODUCTION,i.ECONOMIC_BOOM,i.ECONOMIC_CRISIS,i.STARVATION_WARNING].includes(c.type)).slice(-20),t=e.filter(c=>c.type===i.ECONOMIC_CRISIS),s=e.filter(c=>c.type===i.ECONOMIC_BOOM);return{trend:s.length>t.length?"positive":"negative",stability:Math.max(0,1-t.length/Math.max(1,e.length)),recentCrises:t.length,recentBooms:s.length}}_analyzeSocialTrends(){const e=this.events.filter(r=>[i.CONNECTION_FORMED,i.CONNECTION_BROKEN,i.POLARIZATION_EVENT].includes(r.type)).slice(-30),t=e.filter(r=>r.type===i.CONNECTION_FORMED),s=e.filter(r=>r.type===i.CONNECTION_BROKEN),c=e.filter(r=>r.type===i.POLARIZATION_EVENT);return{cohesion:t.length/Math.max(1,s.length),polarization:c.length/Math.max(1,e.length),networkGrowth:t.length-s.length}}_analyzeConflictTrends(){const e=this.events.filter(s=>[i.CONFLICT_INITIATED,i.RESOURCE_THEFT].includes(s.type)).slice(-10),t=e.filter(s=>s.type===i.RESOURCE_THEFT).reduce((s,c)=>s+(c.data.amount||0),0);return{frequency:e.length,intensity:t/Math.max(1,e.length),trend:e.length>5?"escalating":"stable"}}_analyzePopulationTrends(){const n=this.events.filter(c=>c.type===i.AGENT_BIRTH),e=this.events.filter(c=>c.type===i.AGENT_DEATH),t=n.slice(-20),s=e.slice(-20);return{birthRate:t.length,deathRate:s.length,netGrowth:t.length-s.length,mortalityCauses:this._analyzeMortalityCauses(s)}}_analyzeMortalityCauses(n){const e={};return n.forEach(t=>{const s=t.data.cause||"unknown";e[s]=(e[s]||0)+1}),e}getStatistics(){return{...this.statistics,trends:this.analyzeTrends(),recentEvents:this.events.slice(-10),eventTimeline:this._generateTimeline()}}_generateTimeline(){const n=[],e={};return this.events.forEach(t=>{const s=t.cycle;e[s]||(e[s]=[]),e[s].push(t)}),Object.keys(e).sort((t,s)=>parseInt(t)-parseInt(s)).forEach(t=>{n.push({cycle:parseInt(t),events:e[t],summary:this._generateCycleSummary(e[t])})}),n}_generateCycleSummary(n){return{total:n.length,critical:n.filter(t=>t.severity===o.CRITICAL).length,economic:n.filter(t=>t.type.includes("resource")||t.type.includes("economic")).length,social:n.filter(t=>t.type.includes("connection")||t.type.includes("clan")).length,conflicts:n.filter(t=>t.type.includes("conflict")).length}}exportEvents(n="json",e={}){const t=this.getEvents(e);switch(n){case"json":return JSON.stringify(t,null,2);case"csv":return this._exportToCSV(t);case"timeline":return this._exportToTimeline(t);default:return t}}_exportToCSV(n){const e=["ID","Type","Severity","Cycle","Timestamp","Description"],t=n.map(s=>[s.id,s.type,s.severity,s.cycle,new Date(s.timestamp).toISOString(),s.description]);return[e,...t].map(s=>s.join(",")).join(`
`)}_exportToTimeline(n){return n.map(e=>({time:new Date(e.timestamp).toISOString(),cycle:e.cycle,event:e.description,severity:e.severity,category:this._categorizeEventType(e.type)}))}_categorizeEventType(n){return n.includes("resource")||n.includes("economic")?"Economic":n.includes("connection")||n.includes("opinion")?"Social":n.includes("clan")?"Clan":n.includes("conflict")?"Conflict":"System"}startCycle(n){this.logEvent(i.CYCLE_COMPLETED,{cycle:n},o.INFO)}logCycleEconomics(n){const{cycle:e=0,survived:t=0,died:s=0,averageResources:c=0,totalProduction:r=0}=n||{};this.logEvent(i.RESOURCE_PRODUCTION,{cycle:e,survived:t,died:s,averageResources:c,totalProduction:r},o.INFO);const l=t+s;l>0&&s>t*.1&&this.logEvent(i.ECONOMIC_CRISIS,{cycle:e,deathRate:s/l*100,died:s,survived:t},o.CRITICAL),c>100&&this.logEvent(i.ECONOMIC_BOOM,{cycle:e,averageResources:c,growthRate:(c-50)/50*100},o.MILESTONE)}clear(){this.events=[],this.eventCounts={},this.cycleEvents.clear(),this.agentEvents.clear(),this.clanEvents.clear(),this.statistics={totalEvents:0,eventsByType:{},eventsBySeverity:{},eventsPerCycle:[],criticalEvents:[]}}}export{o as EVENT_SEVERITY,i as EVENT_TYPES,E as EventLogger,E as default};
